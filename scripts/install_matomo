#!/bin/bash
#
# Install Matomo 3.11.0 on Ubuntu 18.04.
# This script must be run as root (ex.: sudo sh [script_name])
# Style Guide: https://google.github.io/styleguide/shellguide.html

# Parameters: all manadatory and must be prefix with "--" on command line.
declare -A parameters=( \
  [data_disk_mount_point_path]=\
  [data_disk_size]=\
  [db_server_admin_password]=\
  [db_server_admin_username]=\
  [db_server_fqdn]=\
  [db_server_matomo_database]=\
  [db_server_matomo_password]=\
  [db_server_matomo_username]=\
  [php_max_execution_time]=\
  [smtp_server_fqdn]=\
  [smtp_server_private_ip]=\
  [web_server_fqdn]=\
)

# Functions
source ./apache2.sh
source ./logger.sh
source ./mysql.sh
source ./os.sh
source ./php.sh
source ./utils.sh

function main() {

  local -r APACHE2_CONF_ENABLED_SECURITY_FILE_PATH="/etc/apache2/conf-enabled/security.conf"
  local -r APACHE2_DEFAULT_SITE_CONFIG_FILE_NAME="000-default.conf"
  local -r APACHE2_MATOMO_SITE_CONFIG_FILE_NAME="matomo.conf"
  local -r APACHE2_PHP_INI_FILE_PATH="/etc/php/7.2/apache2/php.ini"
  local -r APACHE2_SITES_AVAILABLE_PATH="/etc/apache2/sites-available"
  local -r APACHE2_USER="www-data"
  local -r MATOMO_ARCHIVE_CRONTAB_ENTRY_PATH="/etc/cron.d/matomo-archive"
  local -r MATOMO_ARCHIVE_LOG_PATH="/var/log/matomo-archive.log"
  local -r MATOMO_PACKAGE_FILE_URL="https://builds.matomo.org/matomo-4.11.0.tar.gz"

  local apache2_matomo_site_document_root_dir_path
  local matomo_package_file_name

  utils::set_exit_trap

  #############################################################################

  logger::title "Start of $0"

  logger::info "This script: "
  logger::info "1) Sets up a web server running Matomo."

  #############################################################################

  logger::title "Parse Input Parameters"

  utils::parse_parameters "$@"

  #############################################################################

  logger::title "Set Global Variables"

  logger::action "Setting apache2_matomo_site_document_root_dir_path..."
  apache2_matomo_site_document_root_dir_path="${parameters[data_disk_mount_point_path]}/matomo"

  #############################################################################

  logger::title "Mount Data Disk"

  os::mount_data_disk_by_size \
    "${parameters[data_disk_size]}" \
    "${parameters[data_disk_mount_point_path]}"

  #############################################################################

  logger::title "Download and Extract Matomo Files"

  if [[ -d "${apache2_matomo_site_document_root_dir_path}" ]]; then
    logger::warn "Skipped: Matomo already installed."
  else
    logger::action "Downloading Matomo package and signature files..."
    # Ref.: https://matomo.org/blog/2014/11/verify-signatures-piwik-packages/
    wget "${MATOMO_PACKAGE_FILE_URL}"
    wget "${MATOMO_PACKAGE_FILE_URL}.asc"

    logger::action "Downloading and installing Matomo packages' signing certificate..."
    gpg --keyserver keyserver.ubuntu.com --recv-keys 814E346FA01A20DBB04B6807B5DBD5925590A237

    logger::action "Checking Matomo package file integrity and origin..."
    matomo_package_file_name=$(basename "${MATOMO_PACKAGE_FILE_URL}")
    if ! gpg --verify "${matomo_package_file_name}"{.asc*,};  then
      logger::error "Downloaded Matomo package file fails signature check. Aborting."
      exit 1
    fi

    logger::action "Extracting Matomo package files..."
    tar zxf "${matomo_package_file_name}" -C "${parameters[data_disk_mount_point_path]}"
  fi

  #############################################################################

  logger::title "Install Debugging Tools"

  logger::action "Installing mysql-client..."
  apt-get install --yes --quiet \
    mysql-client-5.7

  #############################################################################

  logger::title "Install Matomo Dependencies"

  # Ref.: https://matomo.org/docs/requirements/
  #       https://fr.matomo.org/faq/how-to/faq_164/
  #       https://github.com/maxmind/libmaxminddb/blob/master/README.md#on-ubuntu-via-ppa

  logger::action "Adding ppa:maxmind package repository..."
  add-apt-repository --yes ppa:maxmind/ppa
  apt update

  logger::action "Installing packages..."
  apt install --yes --quiet \
    apache2 \
    libapache2-mod-php \
    libmaxminddb-dev \
    libmaxminddb0 \
    mmdb-bin \
    php-cli \
    php-curl \
    php-gd \
    php-mbstring \
    php-mysql \
    php-xml \

  #############################################################################

  logger::title "Set Up SMTP Server"

  os::add_hosts_file_entry \
    "${parameters[smtp_server_private_ip]}" \
    "${parameters[smtp_server_fqdn]}" \
    "Redirect SMTP Server FQDN to Private IP Address."

  #############################################################################

  logger::title "Set Up Apache2"

  logger::action "Creating Matomo site configuration file using Apache2 Default site configuration file as template..."
  # Use the Default site config file as a template.
  cp "${APACHE2_SITES_AVAILABLE_PATH}/${APACHE2_DEFAULT_SITE_CONFIG_FILE_NAME}" "${APACHE2_SITES_AVAILABLE_PATH}/${APACHE2_MATOMO_SITE_CONFIG_FILE_NAME}"

  # Updating matomo site config DocumentRoot.
  apache2::update_config_file \
    "DocumentRoot" \
    "${apache2_matomo_site_document_root_dir_path}" \
    "${APACHE2_SITES_AVAILABLE_PATH}/${APACHE2_MATOMO_SITE_CONFIG_FILE_NAME}"

  logger::action "Prevent Apache2 from serving Matomo's code, data or config files (part 1/2)..."
  # Ref.: https://httpd.apache.org/docs/2.4/mod/core.html#allowoverride
  sed -i "/^[[:space:]]*DocumentRoot .*$/a  \ \n\t<Directory ${apache2_matomo_site_document_root_dir_path}>\n\t\tAllowOverride All\n\t<\/Directory>\n" "${APACHE2_SITES_AVAILABLE_PATH}/${APACHE2_MATOMO_SITE_CONFIG_FILE_NAME}"

  logger::action "Enabling ${APACHE2_MATOMO_SITE_CONFIG_FILE_NAME%%.conf} site..."
  logger::warn "$(a2ensite "${APACHE2_MATOMO_SITE_CONFIG_FILE_NAME%%.conf}")"

  logger::action "Disabling ${APACHE2_DEFAULT_SITE_CONFIG_FILE_NAME%%.conf} site..."
  logger::warn "$(a2dissite "${APACHE2_DEFAULT_SITE_CONFIG_FILE_NAME%%.conf}")"

  logger::action "Hardening web werver..."
  apache2::harden "${APACHE2_CONF_ENABLED_SECURITY_FILE_PATH}"

  logger::action "Setting permission on files: ${apache2_matomo_site_document_root_dir_path}..."
  chown -R "${APACHE2_USER}:root" "${apache2_matomo_site_document_root_dir_path}"
  chmod -R 775 "${apache2_matomo_site_document_root_dir_path}"

  logger::action "Updating Apache2's PHP configuration..."
  # Ref. https://matomo.org/docs/setup-auto-archiving/#important-tips-for-medium-to-high-traffic-websites
  # Values required to run report on 12 months of data.
  php::update_config_file \
    "memory_limit" \
    "2048M" \
    "${APACHE2_PHP_INI_FILE_PATH}"
  php::update_config_file \
    "max_execution_time" \
    "${parameters[php_max_execution_time]}" \
    "${APACHE2_PHP_INI_FILE_PATH}"

  logger::action "Restarting Apache2..."
  service apache2 restart

  #############################################################################

  logger::title "Setup MySQL Database"

  mysql::create_user_options_file \
    "${parameters[db_server_admin_username]}@${parameters[db_server_fqdn]%%.*}" \
    "${parameters[db_server_admin_password]}" \
    "${parameters[db_server_fqdn]}" \
    "3306" \
    "mysql"

  mysql::create_database_if_not_exists \
    "${parameters[db_server_matomo_database]}"

  mysql::create_user_if_not_exists \
    "${parameters[db_server_matomo_username]}" \
    "${parameters[db_server_matomo_password]}"

  mysql::grant_all_privileges \
    "${parameters[db_server_matomo_database]}" \
    "${parameters[db_server_matomo_username]}"

  mysql::delete_user_options_file

  #############################################################################

  logger::title "Matomo Post Installation Process"

  logger::action "Prevent Apache2 from serving Matomo's code, data or config files (part 2/2)..."
  # Ref.: https://matomo.org/faq/troubleshooting/how-do-i-fix-the-error-private-directories-are-accessible/
  # The command below will complain about the configuration file not being
  # found. This is the expected behaviour as Matomo's configuration file will
  # only be created once the initial set up procedure is completed through
  # the application Web portal.
  logger::info "$(runuser -u www-data -- php "${apache2_matomo_site_document_root_dir_path}"/console core:create-security-files)"

  logger::action "Setting up Matomo Archive Crontab..."
  # Ref.: See section "Launching multiple archivers at once" in
  #       https://matomo.org/docs/setup-auto-archiving/#linux-unix-how-to-set-up-a-crontab-to-automatically-archive-the-reports
  if [[ -f "${MATOMO_ARCHIVE_CRONTAB_ENTRY_PATH}" ]]; then
      logger::warn "Skipped: Matomo Archive Crontab already exist."
  else
      for archiver_id in {1..2}; do
          touch "${MATOMO_ARCHIVE_LOG_PATH}.${archiver_id}"
          chown "${APACHE2_USER}" "${MATOMO_ARCHIVE_LOG_PATH}.${archiver_id}"
          echo "${archiver_id} * * * * ${APACHE2_USER} /usr/bin/php ${apache2_matomo_site_document_root_dir_path}/console core:archive --url=https://${parameters[web_server_fqdn]} > ${MATOMO_ARCHIVE_LOG_PATH}.${archiver_id} 2>&1" >> "${MATOMO_ARCHIVE_CRONTAB_ENTRY_PATH}"
      done
  fi

  #############################################################################

  logger::title "End of $0"

  #############################################################################

  utils::unset_exit_trap
}

main "$@"
