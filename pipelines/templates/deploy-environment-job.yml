parameters:
- name: env
  type: string
  values:
  - dev
  - staging
  - prod
- name: site
  type: string

variables:
- group: common-${{ parameters.env }}-secret
- group: ${{ parameters.site }}-public
- group: ${{ parameters.site }}-${{ parameters.env }}-public
- group: ${{ parameters.site }}-${{ parameters.env }}-secret

jobs:
- deployment: deployResourcesJob
  displayName: 'Deploy Environment Job'
  pool:
    vmImage: ubuntu-20.04
  environment: '$(resourceGroupName)'
  strategy:
      runOnce:
        deploy:
          steps:

          - checkout: self # To force checkout since project resides in github repo.

          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Deploy Resources'
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: '$(serviceConnectionName)'
              subscriptionId: '$(subscriptionId)'
              action: 'Create Or Update Resource Group'
              resourceGroupName: '$(resourceGroupName)'
              location: '$(resourceLocation)'
              templateLocation: 'Linked artifact'
              csmFile: 'armTemplates/azuredeploy.json'
              overrideParameters: >-
                -applicationGatewaySslCertificateUri "$(applicationGatewaySslCertificateUri)"
                -applicationGatewayUserAssignedIdentity "$(applicationGatewayUserAssignedIdentity)"
                -armTemplateRepoRawFilesBaseUrl "$(armTemplateRepoRawFilesBaseUrl)"
                -databaseServerAdminPassword "$(databaseServerAdminPassword)"
                -databaseServerAdminUsername "$(databaseServerAdminUsername)"
                -databaseServerBackupRetentionDays $(databaseServerBackupRetentionDays)
                -databaseServerCapacity $(databaseServerCapacity)
                -databaseServerConfigurationAuditLogEnabled "$(databaseServerConfigurationAuditLogEnabled)"
                -databaseServerConfigurationAuditLogEvents "$(databaseServerConfigurationAuditLogEvents)"
                -databaseServerConfigurationCharacterSetServer "$(databaseServerConfigurationCharacterSetServer)"
                -databaseServerConfigurationCollationServer "$(databaseServerConfigurationCollationServer)"
                -databaseServerStorageMb $(databaseServerStorageMb)
                -dataDiskSizeGB $(dataDiskSizeGB)
                -deniedIpAddressList "$(deniedIpAddressList)"
                -environmentName "$(environmentName)"
                -genericShellScriptsRepoRawFilesBaseUrl "$(genericShellScriptsRepoRawFilesBaseUrl)"
                -logAnalyticsWorkspaceRetentionPeriod $(logAnalyticsWorkspaceRetentionPeriod)
                -matomoDatabasePassword "$(matomoDatabasePassword)"
                -matomoDatabaseUsername "$(matomoDatabaseUsername)"
                -projectPublicRawFilesBaseUrl "$(projectPublicRawFilesBaseUrl)"
                -projectShortName "$(projectShortName)"
                -resourceLocation "$(resourceLocation)"
                -resourceTags $(resourceTags)
                -smtpServerFqdn "$(smtpServerFqdn)"
                -smtpServerFromAddress "$(smtpServerFromAddress)"
                -smtpServerPassword "$(smtpServerPassword)"
                -smtpServerPort $(smtpServerPort)
                -smtpServerUsername "$(smtpServerUsername)"
                -storageAccountAllowedIpAddressList "$(corporateGatewayIpAddressList)"
                -virtualMachineTags $(virtualMachineTags)
                -virtualNetworkAddressBase "$(virtualNetworkAddressBase)"
                -webServerAdminEmail "$(webServerAdminEmail)"
                -webServerAdminPassword "$(webServerAdminPassword)"
                -webServerAdminUsername "$(webServerAdminUsername)"
                -webServerBackendMaxExecutionTime $(webServerBackendMaxExecutionTime)
                -webServerFqdn "$(webServerFqdn)"
                -webServerRebootUtcTime "$(webServerRebootUtcTime)"
                -webServerVirtualMachineSize "$(webServerVirtualMachineSize)"
              deploymentMode: 'Incremental'
              deploymentName: '$(projectShortName)_deploy-environment_$(Build.BuildNumber)'
